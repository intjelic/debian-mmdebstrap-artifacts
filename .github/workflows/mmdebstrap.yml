name: mmdebstrap

on:
  push:
    branches: [ master ]

jobs:
  mmdebstrap:
    runs-on: ubuntu-latest
    container:
      image: debian:buster
      options: --privileged

    strategy:
      matrix:
        arch: ["amd64"]
        version: ["buster"]
        variant: ["standard"]
        network: ["ifupdown"]
        # arch: ["armhf", "arm64", "amd64"]
        # version: ["stretch", "buster", "bullseye"]
        # variant: ["essential", "required", "important", "standard"]
        # network: ["ifupdown", "systemd-networkd", "network-manager"]

    env:
      ARTIFACT_NAME: debian-${{ matrix.version }}-${{ matrix.variant }}-${{ matrix.arch }}

    steps:
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y mmdebstrap

      - name: Create filesystem
        run: |
          SYSTEM_PKGS=systemd-sysv,udev,linux-image-amd64
          MAIN_PKGS=debian-archive-keyring,initramfs-tools,kmod,e2fsprogs,btrfs-progs,locales,tzdata,apt-utils,whiptail,debconf-i18n,keyboard-configuration,console-setup
          NETWORK_PKGS=ifupdown,isc-dhcp-client

          mkdir artifact
          mmdebstrap \
            --architectures=${{ matrix.arch }} \
            --variant=${{ matrix.variant }} \
            --components="main" \
            --include=$SYSTEM_PKGS,$MAIN_PKGS,$NETWORK_PKGS \
            ${{ matrix.version }} artifact/${{ env.ARTIFACT_NAME }}

      - name: Extract boot files
        run: |
          mv artifact/${{ env.ARTIFACT_NAME }}/boot/* artifact
          rm -r artifact/${{ env.ARTIFACT_NAME }}/boot

      - name: Create artifact
        run: (cd artifact && tar -czvf ../${{ env.ARTIFACT_NAME }}.tgz .)

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_NAME }}.tgz
          retention-days: 1
